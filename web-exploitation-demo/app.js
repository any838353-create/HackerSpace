const express = require('express');
const cookieParser = require('cookie-parser');
const crypto = require('crypto');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.urlencoded({ extended: true }));
app.use(express.json());
app.use(cookieParser());

const validSessions = new Set();

const layout = (title, body) => `<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>${title}</title>
</head>
<body>
  <h1>${title}</h1>
  <nav>[ <a href="/">home</a> | <a href="/interceptor.html">interceptor</a> | <a href="/conditional.html">conditional</a> | <a href="/session.html">session</a> ]</nav>
  ${body}
</body>
</html>`;

app.get('/', (req, res) => {
  res.type('html').send(layout('Web Exploitation Demo',
    '<ul><li><a href="/interceptor.html">Interceptor</a></li><li><a href="/conditional.html">Conditional</a></li><li><a href="/session.html">Session</a></li></ul>'
  ));
});

app.get('/interceptor.html', (req, res) => {
  res.type('html').send(layout('Interceptor Demo', `
    <p>Intercept requests with Burp:</p>
    <form id="autopost" action="/submit" method="POST">
      <input type="hidden" name="username" value="student" />
      <input type="hidden" name="password" value="hunter2" />
    </form>
    <img src="/pixel.gif?rand=${Date.now()}" width="1" height="1" />
    <script>
      fetch('/track', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'X-Training-Demo': 'Burp-Should-See-Me' },
        body: 'event=pageview&path=/interceptor.html'
      });
      window.onload = () => setTimeout(() => document.getElementById('autopost').submit(), 400);
    </script>`));
});

app.post('/track', (req, res) => res.send('ok'));
app.post('/submit', (req, res) => res.send('Form POST received'));

app.get('/pixel.gif', (req, res) => {
  const gif = Buffer.from('47494638396101000100800000FFFFFF00FFFFFF21F90401000001002C00000000010001000002024401003B', 'hex');
  res.set('Content-Type', 'image/gif');
  res.send(gif);
});

app.get('/conditional.html', (req, res) => {
  if (req.query.value === '24') {
    res.send(layout('Conditional Success', '<p>You provided value=24 âœ…</p>'));
  } else {
    res.status(403).send(layout('Access Denied', '<p>Wrong value. Try ?value=24</p>'));
  }
});

app.get('/session.html', (req, res) => {
  const key = crypto.randomBytes(16).toString('hex');
  validSessions.add(key);
  res.cookie('session', key, { httpOnly: false });
  res.send(layout('Session Key', `<p>Your key: <code>${key}</code></p><a href="/protected.html?session=${key}">Protected page</a>`));
});

app.get('/protected.html', (req, res) => {
  const key = (req.query.session || req.cookies.session || '').toString();
  if (!validSessions.has(key)) {
    return res.status(401).send(layout('Unauthorized', '<p>No valid session key.</p>'));
  }
  res.send(layout('Protected', `<p>Welcome! Valid key: ${key}</p>`));
});

if (require.main === module) {
  app.listen(PORT, () => console.log("Running on http://localhost:"+PORT));
} else {
  module.exports = app;
}
